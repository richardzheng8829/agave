/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAaveDistributionManager,
  IAaveDistributionManagerInterface,
} from "../IAaveDistributionManager";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "emissionPerSecond",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "totalStaked",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAsset",
            type: "address",
          },
        ],
        internalType: "struct DistributionTypes.AssetConfigInput[]",
        name: "assetsConfigInput",
        type: "tuple[]",
      },
    ],
    name: "configureAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAaveDistributionManager__factory {
  static readonly abi = _abi;
  static createInterface(): IAaveDistributionManagerInterface {
    return new utils.Interface(_abi) as IAaveDistributionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAaveDistributionManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IAaveDistributionManager;
  }
}
